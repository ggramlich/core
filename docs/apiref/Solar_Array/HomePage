+ The Solar_Array Class

++ Inheritance

* [Solar_Base::HomePage Solar_Base]

 * Solar_Array

++ Overview

Greatly simplified one-dimensional array object.

Using this class, you can access data using both array notation
($foo['bar']) and object notation ($foo->bar).  This helps with 
moving data among form objects, view helpers, SQL objects, etc.

Once set at construction time, the data keys cannot be added to,
changed, or removed.

Examples:

<code type="php">
$data = array('foo' => 'bar', 'baz' => 'dib', 'zim' => 'gir');
$array = Solar::factory('Solar_Array', array('data' => $data));

echo $array['foo']; // 'bar'
echo $array->foo;   // 'bar'

echo count($array); // 3

foreach ($array as $key => $val) {
    echo "$key=$val ";
} // foo=bar  baz=dib zim=gir

$array->zim = 'irk';
echo $array['zim']; // 'irk'

$array->noSuchKey = 'nothing';
echo $array->noSuchKey; // null
</code>

The one problem is that casting the object to an array will not
reveal the data; you'll get an empty array.  Instead, you should use
the toArray() method to get a copy of the object data.

<code type="php">
$data = array('foo' => 'bar', 'baz' => 'dib', 'zim' => 'gir');
$object = Solar::factory('Solar_Array', array('data' => $data));

$array = (array) $object; // $array = array();

$array = $object->toArray(); // $array = array('foo' => 'bar', ...)
</code>