+ Class Methods

++ Public

* Solar_App_Bookmarks::actionAdd() -- Adds a new bookmark for a signed-in user.

* Solar_App_Bookmarks::actionEdit() -- Allows a signed-in user to edit an existing bookmark.

* Solar_App_Bookmarks::actionQuick() -- Handles JavaScript bookmarking requests from offsite.

* Solar_App_Bookmarks::actionTag() -- Shows a list of bookmarks filtered by tag, regardless of owner.

* Solar_App_Bookmarks::actionTagFeed() -- Shows an RSS feed of bookmarks filtered by tag, regardless of 
owner.

* Solar_App_Bookmarks::actionUser() -- Shows all bookmarks for an owner, optionally filtered by tag.

* Solar_App_Bookmarks::actionUserFeed() -- Shows all bookmarks for an owner as an RSS feed, optionally 
filtered by tag.

Inherited Methods:

* Solar_Controller_Page::__construct() -- Constructor.

* Solar_Controller_Page::__get() -- Try to force users to define what their view variables are.

* Solar_Controller_Page::__set() -- Try to force users to define what their view variables are.

* Solar_App::actionError() -- Shows a generic error page.

* Solar_Base::apiVersion() -- Reports the API version for this class.

* Solar_Controller_Page::display() -- Executes the requested action and displays its output.

* Solar_Controller_Page::fetch() -- Executes the requested action and returns its output with layout.

* Solar_Base::locale() -- Looks up locale strings based on a key.

++ Protected

* Solar_App_Bookmarks::_getOrder() -- Returns a safe SQL ORDER value from the 'order' query parameter.

* Solar_App_Bookmarks::_setup() -- Extended setup.

Inherited Methods:

* Solar_Base::_exception() -- Convenience method for returning exceptions with localized text.

* Solar_Controller_Page::_forward() -- Forwards internally to another action.

* Solar_Controller_Page::_getActionMethod() -- Returns the method name for an action.

* Solar_Controller_Page::_getActionView() -- Returns the view name for an action.

* Solar_Controller_Page::_info() -- Retrieves the TAINTED value of a path-info value by position.

* Solar_Controller_Page::_layoutInstance() -- Creates and returns a new Solar_View object for a layout.

* Solar_Controller_Page::_load() -- Loads properties from an action specification.

* Solar_Controller_Page::_postAction() -- Executes just after each action.

* Solar_Controller_Page::_postRun() -- Executes after the last action and before rendering.

* Solar_App::_preAction() -- Checks to see if user is allowed access.

* Solar_Controller_Page::_preRun() -- Executes after collection but before the first action.

* Solar_Controller_Page::_query() -- Retrieves the TAINTED value of a query request key by name.

* Solar_Controller_Page::_redirect() -- Redirects to another page and action.

* Solar_Controller_Page::_render() -- Renders the view based on page properties.

* Solar_Controller_Page::_viewInstance() -- Creates and returns a new Solar_View object for a view.

++ Private

None.