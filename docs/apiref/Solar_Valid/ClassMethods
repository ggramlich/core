+ Class Methods

++ Public

* Solar_Valid::alnum() -- Validate that a value is only letters (upper or lower case) and digits.

* Solar_Valid::alpha() -- Validate that a value is letters only (upper or lower case).

* Solar_Valid::blank() -- Validate that a value is empty when trimmed of all whitespace.

* Solar_Valid::callback() -- Validate against a callback function or method.

* Solar_Valid::ctype() -- Validate a value against a [[php ctype]] function.

* Solar_Valid::email() -- Validate that a value is an email address.

* Solar_Valid::feedback() -- Validate a value using a callback, and return a message if validation fails.

* Solar_Valid::inKeys() -- Validate that the value is a key in the list of allowed options.

* Solar_Valid::inList() -- Validate that a value is in a list of allowed values.

* Solar_Valid::integer() -- Validate that a value represents an integer (+/-).

* Solar_Valid::ipv4() -- Validate that a value is a legal IPv4 address.

* Solar_Valid::isoDate() -- Validate that a value is an ISO 8601 date string.

* Solar_Valid::isoTime() -- Validate that a value is an ISO 8601 time string (hh:ii::ss format).

* Solar_Valid::isoTimestamp() -- Validate that a value is an ISO 8601 timestamp string.

* Solar_Valid::localeCode() -- Validate that a value is a locale code.

* Solar_Valid::max() -- Validate that a value is less than than or equal to a maximum.

* Solar_Valid::maxLength() -- Validate that a string is no longer than a certain length.

* Solar_Valid::mimeType() -- Validate that a value is formatted as a MIME type.

* Solar_Valid::min() -- Validate that a value is greater than or equal to a minimum.

* Solar_Valid::minLength() -- Validate that a string is at least a certain length.

* Solar_Valid::multiple() -- Check the value against multiple callback validations.

* Solar_Valid::notBlank() -- Validate that a string is not empty when trimmed.

* Solar_Valid::notZero() -- Validate that a value is not exactly zero.

* Solar_Valid::range() -- Validate that a value is within a given range.

* Solar_Valid::rangeLength() -- Validate that the length of a value is within a given range.

* Solar_Valid::regex() -- Validate a value against a regular expression.

* Solar_Valid::scope() -- See a value has only a certain number of digits and decimals.

* Solar_Valid::sepWords() -- Validate that a value is composed of separated words.

* Solar_Valid::uri() -- Validate a value as a URI per RFC2396.

* Solar_Valid::word() -- Validate that a value is composed only of "word" characters.

Inherited Methods:

* Solar_Base::__construct() -- Constructor.

* Solar_Base::apiVersion() -- Reports the API version for this class.

* Solar_Base::locale() -- Looks up locale strings based on a key.

++ Protected

Inherited Methods:

* Solar_Base::_exception() -- Convenience method for returning exceptions with localized text.

++ Private

None.