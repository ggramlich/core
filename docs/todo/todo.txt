MOVING TO A NON-DEV RELEASE


Get database error messages back from form submissions

Convert Solar_Uri to Solar-specific URI haldnler, not generic handler?

Write tests

Write inline docs
    Add for Solar_Exception to overcome Exception lack?
    
Write narrative docs
    Solar_Form and values()
    
Upgrade doc-builder
    show default value for properties
    add parenting
    more robust docblock parser
    split into parse and write/build/render
    have doc-parser un-prefix lines starting with star, not star-space
    warn when there is no docblock
    
Write todo app
    Mock screens

Upgrade bookmarks app


----

DOCS PLAN

Link to Solar vs Zend in docs

* Fix internal docs. Keep very short!  Move long docs to manual.
* Update long docs.
* Write controller stuff, since everyone seems to love that.
* show default values for properties

When packaging, the way to update the site is:

    copy the package.tgz to the desktop
    unzip it
    archive the apiref & manual dirs
    scp to solarphp.com
    unzip there
    done :-)
    
----

TESTING PLAN

need:
    App
    Content
    Controller_Page
    Controller_Front
    Form
    Form_Load*
    Model_*
    PathStack
    Sql
    User
    User_Auth
    User_Role
    View
    View_Helper*
    

----

GENERAL NOTES

Use "fade-anything technique" (fat) JS lib?

Use prototype/scriptaculous libs?

http://www.ilovejackdaniels.com/php/email-address-validation/

http://routes.groovie.org/


----

NEW CLASSES

Create an event dispatcher as a universal observer and notifier?

Solar_User_Access for class/action/submit privileges by user and role
    Solar_User_Perms?
    
Logging class!


----

NEW MODELS, CONTENT TYPES, & APPS

Solar_Model_Members
    id
    created
    updated
    confirmed  -- change to an "active" flag?
    confirm_code  -- change to just "code" for both confirms and resets?
    handle
    passwd
    public
    email
    uri

Solar_App_Member
    actions:
        roster
        register
        passwd
        forgot
        profile
    
Solar_Model_Access
    id
    created
    updated
    allow  -- t/f
    type   -- user/role
    name   -- handle or role name
    class  -- page class
    action -- action
    submit -- submit to that action
    
Solar_App_Access

----

Bookmarks

In list headings, make 'user' clickable, make individual tags clickable

Search by URL, title, description

Change all instances of tag X to tag Z

Make taglist and order into select-lists?


----

Text classes:

Text/Bayes.php (tracks bayes filtering) -- would this be Solar_Model_Bayes?
Text/Csv.php (parse/build CSV/TSV/etc blocks)
Text/Diff.php (get a diff on text)
Text/Filter.php (modifies text to match a filter)
Text/Markup.php (for wiki, bbcode, textile, markdown, email, etc)
    - a way to do simple common stuff, then a way to do more complex stuff
    - common regexes for URI, email, wikilink, freelink, interwiki
    - common regexes for inline bold, italic, tt/code, etc

----

Preferences

sc_pref (whole application AND/OR user prefs, *must* support arrays?)
    id       unique id
    user_id  '_SOLAR_APP' for application prefs)
    app      name of the app (64)
    elem     name of the pref element (64)
    value    the value of the pref element (255) (or CLOB?)
    
REALLY need to work out the preferences thing.

Need to know if it's single-value keys only, or if multi-values per key are allowed.
(Multi shoud be allowed).

The return array should be like the Solar::config() arrays.

SO, e.g, Solar_App_Talk prefs would look like:

    spam => array(word, word, word, word)
    autoFlag => 'spam'
    
And then you need a prefs object to tell you what keys go with what labels, etc.

That by itself is a project.

So for now, to get it off the ground, no prefs at all, just Solar::$config values.


----

Text_Markup

Text/
    Markup.php
    Markup/
        Parse.php
        Parse/
            Bbcode.php -- extends Text_Markup_Parse
            Bbcode/
                Url.php -- extends Text_Markup_Parse_Rule
            DokuWiki.php
            DokuWiki/
            Email.php
            Email/
            Markdown.php
            Markdown/
            MediaWiki.php
            MediaWiki/
            PearWiki.php
            PearWiki/
            Rule.php -- base for parse-rule objects, not an extension of Text_Markup_Parse
            SolarWiki.php
            SolarWiki/
            Textile.php
            Textile/
        Render.php
        Render/
            Email.php -- extends Text_Markup_Render
            Email/
                Url.php -- extends Text_Markup_Render_Rule
            Plain.php
            Plain/
            Rule.php -- base for render-rule objects, not an extension of Text_Markup_Render
            Xhtml.php
            Xhtml/
    
    
Usage:

// create a markup object
$markup = Solar::factory('Solar_Text_Markup');

// set up the parsing by class name; default is SolarWiki
$options = array(...);
$markup->setParse('Solar_Text_Markup_Parse_Bbcode', $options);

/*
// alternative: set up the parsing by object instance
$parse = Solar::factory('Solar_Text_Markup_Parse_Bbcode', $options);
$markup->setParse($parse);
*/

// set up the rendering by class name; default is Xhtml
$options = array(...);
$markup->setRender('Solar_Text_Markup_Render_Xhtml', $options);

/*
// alternative: set up the rendering by object instance
$render = Solar::factory('Solar_Text_Markup_Render_Xhtml', $options);
$markup->setParse($render);
*/

// transform the source text
$output = $markup->transform($source);


When instantiating, have the parse/render object instantiate the rule objects
immediately? That way you could address their configs directly, if needed ...

URLs:
    http://example.com
    [[http://example.com]] superscript
    [[http://example.com |]] (drops the scheme)
    [[http://example.com | rendered as this]]

Wiki (option to render with spaces)
    PageName
    PageName#anchor
    [[PageName#anchor]] superscript
    [[PageName#anchor |]] just the page name
    [[PageName#anchor | rendered as this]]
    
Free:
    [[free page name]]
    [[free page name#anchor]]
    [[free page name#anchor |]] just the page name
    [[free page name#anchor | rendered as this]]

Inter:
    Interwiki::PageName
    Interwiki::PageName#anchor
    [[Interwiki::PageName#anchor | rendered as this]]
    [[Interwiki::free page name]]
    [[Interwiki::free page name#anchor]]
    [[Interwiki::free page name#anchor |]] (drops the interwiki name)
    [[Interwiki::free page name#anchor | rendered as this]]
    Use of double-colons is the default?
    
Default Interwikis:
    amazon::
    google::
    imdb::
    isbn::
    issn::
    php::

Macros:
    {{macro-name key=val key=val key=val}}
    
