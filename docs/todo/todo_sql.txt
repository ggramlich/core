New identifier length values?

maxlen is 63, not 64 (pgsql 7.3 max)
http://www.postgresql.org/docs/7.3/static/sql-syntax.html

	prefix  2 chars
	__ sep  2 chars
	table   27 chars
	__ sep  2 chars
	field   27 chars
	__ sep  2 chars
	suffix  1  (s=seq, i=idx)

          1         2         3         4         5         6
123456789012345678901234567890123456789012345678901234567890123
xx__a_very_very_long_table_name__a_very_very_long_field_name__i


----

Solar_Sql: DESCRIBE TABLE support

Should return an array of (name => name, type, size, scope, required .. default?)

Mysql:  process results of "DESCRIBE %s" returns like this (an array)

	Field	Type	Null	Key	Default	Extra
	id 	int(11) 	  	PRI 	0 	 
	ts_new 	varchar(19) 	  	MUL 	  	 
	ts_mod 	varchar(19) 	  	MUL 	  	 
	summ 	varchar(255) binary 	  	  	  	 
	type 	varchar(16) binary 	  	MUL 	  	 
	queue 	varchar(255) binary 	  	MUL 	  	 
	priority 	decimal(1,0) 	YES 	  	NULL 	 
	user_id 	varchar(32) binary 	YES 	MUL 	NULL 	 
	status 	varchar(16) binary 	YES 	MUL 	NULL 	 

Pgsql:  see PEAR DB/pgsql.php (or use "\d %s" command?)

Fbsql:  see PEAR DB/fbsql.php

Mssql:  see PEAR DB/mssql.php

Sqlite: process results of ...

	SELECT sql FROM
		(SELECT * FROM sqlite_master UNION ALL
		 SELECT * FROM sqlite_temp_master)
	WHERE tbl_name LIKE '%s' AND type!='meta'
	ORDER BY type DESC, name

... returns like this:

	CREATE TABLE sc_bugs (
			id INTEGER NOT NULL,
			ts_new TIMESTAMP NOT NULL,
			ts_mod TIMESTAMP NOT NULL,
			summ VARCHAR(255) NOT NULL,
			type VARCHAR(16) NOT NULL,
			queue VARCHAR(255) NOT NULL,
			priority NUMERIC(1,0) NULL,
			user_id VARCHAR(32) NULL,
			status VARCHAR(16) NULL
	);
	CREATE UNIQUE INDEX sc_bugs__id__idx ON sc_bugs (id);
	CREATE INDEX sc_bugs__queue__idx ON sc_bugs (queue);
	CREATE INDEX sc_bugs__status__idx ON sc_bugs (status);
	CREATE INDEX sc_bugs__ts_mod__idx ON sc_bugs (ts_mod);
	CREATE INDEX sc_bugs__ts_new__idx ON sc_bugs (ts_new);
	CREATE INDEX sc_bugs__type__idx ON sc_bugs (type);
	CREATE INDEX sc_bugs__user_id__idx ON sc_bugs (user_id);

PDO does column metas.  this will get us the column descriptions anyway.

----

Solar_Sql: Portable string and date functions

concat($args)
substr($arg, $start, $count) -- 1-based

-- are these the same everywhere?
left($arg, $count)
right($arg, $count)
upper($arg)
lower($arg)

function year($arg)
{
	// 0123456789
	// yyyy-mm-dd
	return $this->substr($arg, 0, 4);
}

function month($arg)
{
	// 0123456789
	// yyyy-mm-dd
	return $this->substr($arg, 5, 2);
}

function day($arg)
{
	// 0123456789
	// yyyy-mm-dd
	return $this->substr($arg, 8, 2);
}

function hour($arg)
{
	// 01234567
	// hh:ii:ss
	return $this->substr($this->right($arg, 8), 0, 2);
}

function minute($arg)
{
	// 01234567
	// hh:ii:ss
	return $this->substr($this->right($arg, 8), 3, 2);
}

function second($arg)
{
	// 01234567
	// hh:ii:ss
	return $this->substr($this->right($arg, 8), 6, 2);
}


