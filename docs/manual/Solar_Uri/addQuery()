This method creates a new key and value in the query if the key does not already exist.  If the key **does** already exist, the value is appended as a new array element for that key.

For example:

<code type="php">
$uri = Solar::factory('Solar_Uri');

// right now there are no elements in the query property.
// let's add one.  this is equivalent to setQuery().
$uri->addQuery('foo', 'bar');

// now we have one value for 'foo'.
// $uri->query: array('foo' => 'bar')
// 
// let's add another value to 'foo'.
$uri->addQuery('foo', 'baz');

// now we have two values for 'foo'.
// $uri->query: array('foo' => array('bar', 'baz'))
</code>

This does not let you add associative keys, only sequential ones.

However, if you really need to add associative keys, you are welcome to work with the query property directly:

<code type="php">
$uri = Solar::factory('Solar_Uri');

// sequential array
$uri->query['foo'] = array('bar', 'baz');
// exports as "?foo[0]=bar&foo[1]=baz"

// associative array
$uri->query['foo'] = array(
    'bar' => 'baz',
    'zim' => 'gir'
);
// exports as "?foo[bar]=baz&foo[zim]=gir"

</code>