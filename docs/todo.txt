REELASE 0.8.0:

	check reported bugs
	
	update API docs
	
	start tagging releases
	

----

DOCUMENTATION PLAN

easy:
	Solar_Filter
	
average:
	Solar_User_Auth
	Solar_User_Role

difficult:
	Solar_User
	Solar_Sql

Solar_Template is Savant3, use Savant3 docs.


----

NEW CLASSES

Create an event dispatcher as a universal observer and notifier?

Do we need a Solar_Template proper?  (Ick.)


----

Bookmarks

In list headings, make 'user' clickable, make individual tags clickable

Search by URL, title, description

Change all instances of tag X to tag Z


----

Solar_Cell_Hits for hit tracking by URI (not by id, exactly)

----

Solar_Cell_Bugs

List for a specific queue.

----

Solar_App_Bugs

Need ordering and paging options.

Leave this to Loveless/Beaver?


----

Solar_Cell_Comments

Need a 'remember me' function

Need to separate Solar_Cell_Comments_Rules into a standalone content-filtering class
... or add a file-based plugin mechanism?  or both?  Text_Bayes?  Text_Filter?


----

Text classes:

Text/Bayes.php (tracks bayes filtering) -- would this be Solar_Cell_Bayes?
Text/Csv.php (parse/build CSV/TSV/etc blocks)
Text/Diff.php (get a diff on text)
Text/Filter.php (modifies text to match a filter)
Text/Markup.php (for wiki, bbcode, textile, markdown, email, etc)
	- a way to do simple common stuff, then a way to do more complex stuff
	- common regexes for URI, email, wikilink, freelink, interwiki
	- common regexes for inline bold, italic, tt/code, etc

----

Permission settings (RBAC or ACL?)

sc_perm
	id      -- unique row ID
	user_id -- who set this control
	app     -- related application
	ord     -- numeric order when sorting
	type    -- user or role
	name    -- user name or role name (user wildcards * for any/all, + for auth, group * for all)
	priv    -- name of privilege
	flag    -- true/false
	info    -- priv-specific information (varchar 255)

how to set up "this implies that" lists?

e.g.:

allow page_view  implies nothing
allow page_edit  implies allow page_view
allow page_admin implies allow page_edit
allow area_map   implies allow page_edit on all pages in area
allow area_admin implies allow area_map on all pages in area
allow wiki_admin implies allow area_admin on all areas

must be set up programmatically?


----

Simple user account table

sc_users
	user_id 
	passwd


----

Preferences

sc_pref (whole application AND/OR user prefs, *must* support arrays?)
	id       unique id
	user_id  '_SOLAR_APP' for application prefs)
	app      name of the app (64)
	elem     name of the pref element (64)
	value    the value of the pref element (255) (or CLOB?)
	
REALLY need to work out the preferences thing.

Need to know if it's single-value keys only, or if multi-values per key are allowed.
(Multi shoud be allowed).

The return array should be like the Solar::config() arrays.

SO, e.g, Solar_App_Talk prefs would look like:

	spam => array(word, word, word, word)
	autoFlag => 'spam'
	
And then you need a prefs object to tell you what keys go with what labels, etc.

That by itself is a project.

So for now, to get it off the ground, no prefs at all, just Solar::$config values.